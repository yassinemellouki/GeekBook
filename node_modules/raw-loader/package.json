{
  "_from": "raw-loader",
  "_id": "raw-loader@2.0.0",
  "_inBundle": false,
  "_integrity": "sha512-kZnO5MoIyrojfrPWqrhFNLZemIAX8edMOCp++yC5RKxzFB3m92DqKNhKlU6+FvpOhWtvyh3jOaD7J6/9tpdIKg==",
  "_location": "/raw-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "raw-loader",
    "fetchSpec": "latest",
    "name": "raw-loader",
    "raw": "raw-loader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/raw-loader/-/raw-loader-2.0.0.tgz",
  "_shasum": "e2813d9e1e3f80d1bbade5ad082e809679e20c26",
  "_shrinkwrap": null,
  "_spec": "raw-loader",
  "_where": "/Users/yassine/Desktop/GeekBook/Code",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "6.9.0"
          },
          "useBuiltIns": "usage"
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/raw-loader/issues"
  },
  "bundleDependencies": false,
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "dependencies": {
    "loader-utils": "^1.1.0",
    "schema-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "A loader for webpack that allows importing files as a String",
  "devDependencies": {
    "@babel/cli": "^7.1.5",
    "@babel/core": "^7.1.6",
    "@babel/polyfill": "^7.0.0",
    "@babel/preset-env": "^7.1.6",
    "@commitlint/cli": "^7.1.6",
    "@commitlint/config-conventional": "^7.1.2",
    "@webpack-contrib/defaults": "^3.1.0",
    "@webpack-contrib/eslint-config-webpack": "^3.0.0",
    "babel-jest": "^24.5.0",
    "cross-env": "^5.2.0",
    "del": "^4.0.0",
    "del-cli": "^1.1.0",
    "eslint": "^5.10.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-prettier": "^3.0.0",
    "husky": "^1.2.0",
    "jest": "^24.5.0",
    "lint-staged": "^8.1.0",
    "memory-fs": "^0.4.1",
    "prettier": "^1.11.1",
    "standard-version": "^5.0.2",
    "webpack": "^4.3.0"
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "files": [
    "dist/"
  ],
  "homepage": "https://github.com/webpack-contrib/raw-loader",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "name": "raw-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.3.0"
  },
  "prettier": {
    "arrowParens": "always",
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "readme": "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://cdn3.iconfinder.com/data/icons/lexter-flat-colorfull-file-formats/56/raw-256.png\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# raw-loader\n\nA loader for webpack that allows importing files as a String.\n\n## Getting Started\n\nTo begin, you'll need to install `raw-loader`:\n\n```console\n$ npm install raw-loader --save-dev\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**file.js**\n\n```js\nimport txt from './file.txt';\n```\n\n**webpack.config.js**\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.txt$/i,\n        use: 'raw-loader',\n      },\n    ],\n  },\n};\n```\n\nOr from the command-line:\n\n```console\n$ webpack --module-bind 'txt=raw-loader'\n```\n\nAnd run `webpack` via your preferred method.\n\n## Examples\n\n### Inline\n\n```js\nimport txt from 'raw-loader!./file.txt';\n```\n\nBeware, if you already define loader(s) for extension(s) in `webpack.config.js` you should use:\n\n```js\nimport css from '!!raw-loader!./file.css'; // Adding `!!` to a request will disable all loaders specified in the configuration\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/raw-loader.svg\n[npm-url]: https://npmjs.com/package/raw-loader\n[node]: https://img.shields.io/node/v/raw-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/raw-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/raw-loader\n[tests]: https://img.shields.io/circleci/project/github/webpack-contrib/raw-loader.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/raw-loader\n[cover]: https://codecov.io/gh/webpack-contrib/raw-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/raw-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=raw-loader\n[size-url]: https://packagephobia.now.sh/result?p=raw-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/raw-loader.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
    "ci:coverage": "npm run test:coverage -- --runInBand",
    "ci:lint": "npm run lint && npm run security",
    "ci:lint:commits": "commitlint --from=origin/master --to=${CIRCLE_SHA1}",
    "ci:test": "npm run test:only -- --runInBand",
    "clean": "del-cli dist",
    "commitlint": "commitlint --from=master",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache src test",
    "prebuild": "npm run clean",
    "prepublish": "npm run build",
    "pretest": "npm run lint",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "npm run test:only",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:only": "jest",
    "test:watch": "jest --watch"
  },
  "version": "2.0.0"
}
